turntvupby:
  action:
    service: script.alexa_volume_up
    data_template:
      amount: '{{ amount | int }}'
turntvdownby:
  action:
    service: script.alexa_volume_down
    data_template:
      amount: '{{ amount | int }}'
turntvup:
  action:
    service: script.media_volume_up
turntvdown:
  action:
    service: script.media_volume_down
thetv:
  action:
    service: script.turn_on
    data_template:
      entity_id: script.media_{{ tv_scripts | replace(" ", "_") }}
skipback:
  action:
    service: script.turn_on
    data_template:
      entity_id: script.media_skip_back
watch:
  action:
    service: script.watch_activity
    data_template:
      media_activity: '{{ watch_scripts | replace(" ", "_") }}'
  speech:
    text: "Switching to  {{ watch_scripts }}"
listen:
  action:
    service: script.watch_activity
    data_template:
      media_activity: '{{ listen_scripts | replace(" ", "_") }}'
  async_action: true
  speech:
    text: "Switching to bluetooth audio."
theweather:
  speech:
    text: "The inside temperature is {{ states('sensor.netatmo_indoor_temperature_2') }} degrees with {{ states('sensor.netatmo_indoor_humidity_2') }} percent humidity. Outside it's {{ states('sensor.netatmo_outdoor_temperature_2') }} degrees and {{ states('sensor.netatmo_outdoor_humidity_2') }} percent humidity."
whatitslike:
  action:
    # script will set the value in the sensor template below
    service: script.alexa_weather
    data_template:
      locale: '{{ where }}'
      city: '{{ in_city }}'
  # Even though this is default, we're going to set it to be sure
  async_action: false
  speech:
    text: "{{ states('sensor.netatmo_indoor_temperature_2') }}" #sensor.last_alexa_weather_request
voiceenhance:
  action:
    service: remote.send_command
    data:
      entity_id: remote.living_room
      device: 60888940
      command: Dialogue
goodnight:
  action:
    service: script.turn_on
    data:
      entity_id: script.alexa_goodnight
  async_action: true
  speech: 
    text: >
      {% set goodnight_platitudes = [
            "Goodnight.",
            "Fremulon",
            "Not a doctor. Shhhh",
            "Goodnight.",
            "Sleep well.",
            "Goodnight.",
            "Don't let the bedbugs bite.",
            "Goodnight.",
            "Time to ride the rainbow to dreamland!",
            "Have a good one.",
            "Later tater.",
            "Goodnight.",
            "As Oscar Wilde said, goodnight.",
            "Goodnight.",
            "Light switches. Am I right?"
      ] %}
      {{ goodnight_platitudes | random }}
rise_and_shine:
  action:
    service: script.turn_on
    data:
      entity_id: script.alexa_rise_and_shine
  async_action: true
dereks_morning:
  action:
    service: script.turn_on
    data:
      entity_id: script.alexa_dereks_morning
  async_action: true
  speech:
    text: >
      Happy {{ states('sensor.utility_dow') }}.
      
      It's currently {{ states('sensor.netatmo_outdoor_temperature_2') }} degrees at our weather stations. The immediate forcast calls forcast
      {{ states('sensor.dark_sky_minutely_summary') }}. Later, expect {{ states('sensor.dark_sky_hourly_summary') }} with a high of
      {{ states('sensor.dark_sky_daytime_high_temperature_0') }} degrees and a low of {{ states('sensor.dark_sky_overnight_low_temperature_0') }} degrees.