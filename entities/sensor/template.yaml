- platform: template
  sensors:
    # Converting units
    convert_backyard_wind:
      entity_id: sensor.netatmo_backyard_strength
      unit_of_measurement: "mph"
      friendly_name: 'Backyard Wind Strength'
      value_template: "{{ (states('sensor.netatmo_backyard_strength') | float / 1.609) | round(2) }}"
    convert_backyard_gust:
      entity_id: sensor.netatmo_backyard_gust_strength
      unit_of_measurement: "mph"
      friendly_name: 'Backyard Wind Gust Strenth'
      value_template: "{{ (states('sensor.netatmo_backyard_gust_strength') | float / 1.609) | round(2) }}"
    convert_night_binary:
      entity_id: sun.sun
      unit_of_measurement: suns
      friendly_name: Sun Below Horizon Binary
      value_template: >
        {%- if is_state("sun.sun", "above_horizon") -%}
          0
        {%- else -%}
          1
        {%- endif -%}
    # Harmony current activity
    living_room_remote_state:
      entity_id: remote.living_room
      value_template: '{{ states.remote.living_room.attributes.current_activity }}'
      friendly_name: 'Current Activity:'
    # It will simplify cards and scripts to translate the current Harmony activity into the device and IDs in use
    living_room_media_activity_id:
      entity_id: remote.living_room
      value_template: >
        {% if states.remote.living_room.attributes.current_activity == "Amazon" %}
          31480109
        {% elif states.remote.living_room.attributes.current_activity == "Hulu" %}
          31949557
        {% elif states.remote.living_room.attributes.current_activity == "Kodi" %}
          31479535
        {% elif states.remote.living_room.attributes.current_activity == "Netflix" %}
          31478989
        {% elif states.remote.living_room.attributes.current_activity == "OTA" %}
          31480260
        {% elif states.remote.living_room.attributes.current_activity == "Plex" %}
          31571897
        {% elif states.remote.living_room.attributes.current_activity == "Sling" %}
          31480008
        {% elif states.remote.living_room.attributes.current_activity == "Youtube" %}
          33323580
        {% elif states.remote.living_room.attributes.current_activity == "Spotify" %}
          43030123  
        {% elif states.remote.living_room.attributes.current_activity == "Record Player" %}
          38156985
        {% elif states.remote.living_room.attributes.current_activity == "Play Switch" %}
          31480190
        {% else %}
          unknown
        {% endif %}
      friendly_name: 'Current Activity ID' 
    living_room_media_device:
      entity_id: remote.living_room
      value_template: >
        {% if states.remote.living_room.attributes.current_activity == "Kodi" %}
          htpc
        {% elif states.remote.living_room.attributes.current_activity == "Amazon"
              or  states.remote.living_room.attributes.current_activity == "Hulu"
              or  states.remote.living_room.attributes.current_activity == "Netflix"
              or states.remote.living_room.attributes.current_activity == "Plex"
              or states.remote.living_room.attributes.current_activity == "Listen to Spotify"
              or states.remote.living_room.attributes.current_activity == "Sling"
              or states.remote.living_room.attributes.current_activity == "Youtube" %}
          roku
        {% elif states.remote.living_room.attributes.current_activity == "OTA" %}
          ota
        {% elif states.remote.living_room.attributes.current_activity == "Play Switch" %}
          switch
        {% elif states.remote.living_room.attributes.current_activity == "Listen to Records" %}
          bluetooth
        {% else %}
          unknown
        {% endif %}
      friendly_name: 'Current Remote Device:'
    living_room_media_device_id:
      entity_id: sensor.living_room_media_device
      value_template: >
        {% if is_state("sensor.living_room_media_device", "htpc") %}
          51738178
        {% elif is_state("sensor.living_room_media_device", "roku") %}
          66658758
        {% else %}
          off
        {% endif %}
      friendly_name: 'Current Media Device ID'
    # First Alert smoke detector translation
    garage_smoke_detector_status:
      friendly_name: 'Garage Smoke Detector Status'
      value_template: >-
        {% if is_state("sensor.first_alert_brk_brands_inc_zcombo_smoke_and_carbon_monoxide_detector_alarm_level", "255") and is_state("sensor.first_alert_brk_brands_inc_zcombo_smoke_and_carbon_monoxide_detector_alarm_type", "1")%}
          smoke
        {% elif is_state("sensor.first_alert_brk_brands_inc_zcombo_smoke_and_carbon_monoxide_detector_alarm_level", "255") and is_state("sensor.first_alert_brk_brands_inc_zcombo_smoke_and_carbon_monoxide_detector_alarm_type", "2")%}
          co
        {% else %}
          idle
        {% endif %}
      icon_template: >-
        {% if is_state("sensor.first_alert_brk_brands_inc_zcombo_smoke_and_carbon_monoxide_detector_alarm_level", "255") and is_state("sensor.first_alert_brk_brands_inc_zcombo_smoke_and_carbon_monoxide_detector_alarm_type", "1")%}
          mdi:fire
        {% elif is_state("sensor.first_alert_brk_brands_inc_zcombo_smoke_and_carbon_monoxide_detector_alarm_level", "255") and is_state("sensor.first_alert_brk_brands_inc_zcombo_smoke_and_carbon_monoxide_detector_alarm_type", "2")%}
          mdi:cloud-outline
        {% else %}
          mdi:smoke-detector
        {% endif %}
    # Attribute -> state
    outdoor_pressure:
      entity_id:  sensor.waqi_eugene_highway_99_oregon_usa
      value_template: '{{ states.sensor.waqi_eugene_highway_99_oregon_usa.attributes.pressure }}'
      friendly_name: 'Outdoor Pressure'
      unit_of_measurement: mbar
    # Money Math
    bitcoin_current_value:
      entity_id: 
       - sensor.exchange_rate_1_btc
       - input_number.bitcoin_quantity
      value_template: '{{ (states("sensor.exchange_rate_1_btc") | float * states("input_number.bitcoin_quantity") | float) | round(2) }}'
      friendly_name: BTC Position
      unit_of_measurement: USD
    combined_current_value:
      entity_id:
      - sensor.main_street_current_value
      - sensor.bitcoin_current_value
      value_template: '{{ (states("sensor.bitcoin_current_value") | float + states("sensor.main_street_current_value") | float) | round(2) }}'
      friendly_name: Total Postion
      unit_of_measurement: USD
    main_street_current_value:
      entity_id:
      - sensor.main_street
      - input_number.main_street_shared_owned
      value_template: '{{ (states("sensor.main_street") | float * states("input_number.main_street_shared_owned") | float) | round(2) }}'
      friendly_name: MAIN Postion
      unit_of_measurement: USD
    p_and_l:
      entity_id:
      - sensor.main_street
      - input_number.main_street_shared_owned
      - input_number.main_street_average_cost
      - sensor.exchange_rate_1_btc
      - input_number.bitcoin_quantity
      - input_number.bitcoin_average_cost
      value_template: '{{ ((states("sensor.main_street") | float * states("input_number.main_street_shared_owned") | float) - (states("input_number.main_street_average_cost") | float * states("input_number.main_street_shared_owned") | float) + (states("sensor.exchange_rate_1_btc") | float * states("input_number.bitcoin_quantity") | float) - (states("input_number.bitcoin_average_cost") | float * states("input_number.bitcoin_quantity") | float)) | round(2) }}'
      friendly_name: P&L
      unit_of_measurement: USD
    # Simple bool for decided if the house is empty of residents
    unoccupied_mode:
      entity_id:
        - person.derek
        - person.bonnie
        - input_select.occupation_override
      friendly_name: 'Presence Detection'
      value_template: >
        {%- if states("input_select.occupation_override") != "Automatic" -%}
          {{ states("input_select.occupation_override") }}
        {%- elif is_state("person.derek", "home")
          or is_state("person.bonnie", "home") -%}
          Occupied
        {%- else -%}
          Unoccupied
        {%- endif -%}
      icon_template: >
        {% set icons = {
          "Occupied": "mdi:account-group",
          "Unoccupied": "mdi:account-group-outline"
        } %}
        {%- if states("input_select.occupation_override") != "Automatic" -%}
          {%- if is_states("input_select.occupation_override", "Occupied") -%}
            {{ icons.Occupied }}
          {%- else -%}
            {{ icons.Unoccupied }}
          {%- endif -%}
        {%- elif is_state("person.derek", "home")
          or is_state("person.bonnie", "home") -%}
          {{ icons.Occupied }}
        {%- else -%}
          {{ icons.Unoccupied }}
        {%- endif -%}
    # Home Assistant Updates Available
    update_available:
      friendly_name: "An update is available"
      entity_id: updater.updater
      value_template: >-
        {% if state_attr('updater.updater', 'friendly_name') and (states.updater.updater != states.sensor.current_version) %}
          on
        {% else %}
          off
        {% endif %}
    # Utility Sensors
    utility_dow:
      entity_id: sensor.date
      friendly_name: 'Day Of The Week'
      value_template: >
        {{ ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'][now().weekday()] }}
    # WAQI States
    waqi_state:
      entity_id: sensor.waqi_eugene_wilkes_drive_oregon_usa
      friendly_name: Air Quality
      value_template: >
        {% if states('sensor.waqi_eugene_wilkes_drive_oregon_usa') | int < 51 %}
          Good
        {% elif states('sensor.waqi_eugene_wilkes_drive_oregon_usa') | int < 101 %}
          Moderate
        {% elif states('sensor.waqi_eugene_wilkes_drive_oregon_usa') | int < 151 %}
          Unhealthy for Sensitive Groups
        {% elif states('sensor.waqi_eugene_wilkes_drive_oregon_usa') | int < 201 %}
          Unhealthy
        {% elif states('sensor.waqi_eugene_wilkes_drive_oregon_usa') | int < 300 %}
          Very Unhealthy
        {% elif states('sensor.waqi_eugene_wilkes_drive_oregon_usa') | int > 300 %}
          Hazardous
        {% else %}
          Unknown
        {% endif %}